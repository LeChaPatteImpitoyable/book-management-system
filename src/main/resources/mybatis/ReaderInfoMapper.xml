<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ying.background.mapper.ReaderInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ying.background.model.ReaderInfo" >
    <id column="reader_id" property="readerId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birth" property="birth" jdbcType="DATE" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="telcode" property="telcode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modify_id" property="modifyId" jdbcType="INTEGER" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    reader_id, name, sex, birth, address, telcode, create_time, create_id, modify_time, 
    modify_id, is_deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from reader_info
    where reader_id = #{readerId,jdbcType=INTEGER}
  </select>

  <insert id="insert" parameterType="com.ying.background.model.ReaderInfo" >
    insert into reader_info (reader_id, name, sex, 
      birth, address, telcode, 
      create_time, create_id, modify_time)
    values (#{readerId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{birth,jdbcType=DATE}, #{address,jdbcType=VARCHAR}, #{telcode,jdbcType=VARCHAR}, 
      now(), #{createId,jdbcType=INTEGER}, now())
  </insert>
  <insert id="insertSelective" parameterType="com.ying.background.model.ReaderInfo" >
    insert into reader_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="readerId != null" >
        reader_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birth != null" >
        birth,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="telcode != null" >
        telcode,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifyId != null" >
        modify_id,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="readerId != null" >
        #{readerId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=DATE},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="telcode != null" >
        #{telcode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null" >
        #{modifyId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ying.background.model.ReaderInfo" >
    update reader_info
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="telcode != null" >
        telcode = #{telcode,jdbcType=VARCHAR},
      </if>
      <if test="1==1" >
        modify_time = now(),
      </if>
      <if test="modifyId != null" >
        modify_id = #{modifyId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where reader_id = #{readerId,jdbcType=INTEGER}
  </update>

  <select id="queryReaderInfosCount" resultType="java.math.BigDecimal">
    SELECT count(*) FROM reader_info
    WHERE is_deleted = 0
    <if test="keyword != null and keyword != ''">
      and (position(#{keyword} in reader_id) or position(#{keyword} in name))
    </if>
  </select>

  <select id="queryReaderInfos" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM reader_info
    WHERE is_deleted = 0
    <if test="keyword != null and keyword != ''">
      and (position(#{keyword} in reader_id) or position(#{keyword} in name))
    </if>
    <if test="length != 0">
      limit #{offset}, #{length}
    </if>
  </select>
</mapper>